/*1) Create the DEPT table, based on the following table instance chart. Save the statement
in a script called lab_10_01.sql, and then execute the statement in the script to
create the table. Confirm that the table is created.*/

CREATE TABLE DEPT(
ID NUMBER(7) NOT NULL PRIMARY KEY ,
NAME VARCHAR2(25));

--2) Populate the DEPT table with data from the DEPARTMENTS table. Include only
--columns that you need.

INSERT INTO DEPT (ID, NAME) VALUES(10, 'Administration');
INSERT INTO DEPT (ID, NAME) VALUES(20, 'Marketing');
INSERT INTO DEPT (ID, NAME) VALUES(30, 'Purchasing');
INSERT INTO DEPT (ID, NAME) VALUES(40, 'Human Resources');
INSERT INTO DEPT (ID, NAME) VALUES(50, 'Shipping');
INSERT INTO DEPT (ID, NAME) VALUES(60, 'IT');
INSERT INTO DEPT (ID, NAME) VALUES(70, 'Public Relations');
INSERT INTO DEPT (ID, NAME) VALUES(80, 'Sales');
INSERT INTO DEPT (ID, NAME) VALUES(90, 'Executive');
INSERT INTO DEPT (ID, NAME) VALUES(100, 'Finance');
INSERT INTO DEPT (ID, NAME) VALUES(110, 'Accounting');
INSERT INTO DEPT (ID, NAME) VALUES(120, 'Treasury');
INSERT INTO DEPT (ID, NAME) VALUES(130, 'Corporate Tax');
INSERT INTO DEPT (ID, NAME) VALUES(140, 'Control And Credit');
INSERT INTO DEPT (ID, NAME) VALUES(150, 'Shareholder Services');
INSERT INTO DEPT (ID, NAME) VALUES(160, 'Benefits');
INSERT INTO DEPT (ID, NAME) VALUES(170, 'Manufacturing');
INSERT INTO DEPT (ID, NAME) VALUES(180, 'Construction');
INSERT INTO DEPT (ID, NAME) VALUES(190, 'Contracting');

/*Create the EMP table based on the following table instance chart. Save the statement
in a script called lab_10_03.sql, and then execute the statement in the script to
create the table. Confirm that the table is created.
*/
CREATE TABLE EMP
(
  ID NUMBER(7) 
, LAST_NAME VARCHAR2(25) 
, FIRST_NAME VARCHAR2(25) 
, DEPT_ID NUMBER(7) 
, CONSTRAINT FK_ID FOREIGN KEY(ID) REFERENCES DEPT(ID)
) ;

/*) Create the EMPLOYEES2 table based on the structure of the EMPLOYEES table. Include only the EMPLOYEE_ID, FIRST_NAME, LAST_NAME, 
SALARY, and DEPARTMENT_ID columns. Name the columns in your new table ID, FIRST_NAME, LAST_NAME, SALARY, and DEPT_ID, respectively.*/


CREATE TABLE EMPLOYEES2
(
  ID NUMBER(*, 0) 
, FIRST_NAME VARCHAR2(20 BYTE) 
, LAST_NAME VARCHAR2(25 BYTE) 
, SALARY NUMBER(8, 2) 
, DEPT_ID NUMBER(*, 0) 
) ;

--5) Alter the EMPLOYEES2 table status to read-only.

ALTER TABLE EMPLOYEES2 READ ONLY;

--6) Try to insert the following row in the EMPLOYEES2 table:
INSERT INTO EMPLOYEES2 (ID, FIRST_NAME, LAST_NAME, SALARY, DEPT_ID) VALUES(120, 'ISHAAN','KUNWAR', 400000,56);

--7) Revert the EMPLOYEES2 table to the read/write status. Now, try to insert the same
--row again. 

ALTER TABLE EMPLOYEES2 READ WRITE;

INSERT INTO EMPLOYEES2 (ID, FIRST_NAME, LAST_NAME, SALARY, DEPT_ID) VALUES(120, 'ISHAAN','KUNWAR', 400000,56);

--Drop the EMPLOYEES2 table.
DROP TABLE  EMPLOYEES2;


/*1) The staff in the HR department wants to hide some of the data in the EMPLOYEES
table. Create a view called EMPLOYEES_VU based on the employee numbers,
employee last names, and department numbers from the EMPLOYEES table. The
heading for the employee name should be EMPLOYEE.*/




CREATE OR REPLACE VIEW EMPLOYEES_VU (EMPLOYEE_ID, EMPLOYEE , DEPARTMENT_ID)
AS SELECT EMPLOYEE_ID, LAST_NAME AS EMPLOYEE, DEPARTMENT_ID
FROM TBLEMPLOYEES;

SELECT *
FROM employees_vu;

--3) Using your EMPLOYEES_VU view, write a query for the HR department to display all
--employee names and department numbers.

SELECT EMPLOYEE, DEPARTMENT_ID FROM EMPLOYEES_VU;

/*) Department 50 needs access to its employee data. Create a view named DEPT50 that
contains the employee numbers, employee last names, and department numbers for
all employees in department 50. You have been asked to label the view columns
EMPNO, EMPLOYEE, and DEPTNO. For security purposes, do not allow an employee to
be reassigned to another department through the view.
*/

CREATE OR REPLACE VIEW DEPT_50 (EMPNO, EMPLOYEE , DEPTNO)
AS SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_ID
FROM TBLEMPLOYEES
WHERE DEPARTMENT_ID = 50
WITH READ ONLY;

--Display the structure and contents of the DEPT50 view.

SELECT * FROM DEPT_50;












